     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: test.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: test.go:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 2) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: test.go:3:1
    12  .  .  .  Tok: const
    13  .  .  .  Lparen: -
    14  .  .  .  Specs: []ast.Spec (len = 1) {
    15  .  .  .  .  0: *ast.ValueSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    18  .  .  .  .  .  .  0: *ast.Ident {
    19  .  .  .  .  .  .  .  NamePos: test.go:3:7
    20  .  .  .  .  .  .  .  Name: "a_"
    21  .  .  .  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  .  .  .  Kind: const
    23  .  .  .  .  .  .  .  .  Name: "a_"
    24  .  .  .  .  .  .  .  .  Decl: *(obj @ 15)
    25  .  .  .  .  .  .  .  .  Data: 0
    26  .  .  .  .  .  .  .  .  Type: nil
    27  .  .  .  .  .  .  .  }
    28  .  .  .  .  .  .  }
    29  .  .  .  .  .  }
    30  .  .  .  .  .  Type: nil
    31  .  .  .  .  .  Values: []ast.Expr (len = 1) {
    32  .  .  .  .  .  .  0: *ast.BasicLit {
    33  .  .  .  .  .  .  .  ValuePos: test.go:3:12
    34  .  .  .  .  .  .  .  Kind: INT
    35  .  .  .  .  .  .  .  Value: "1"
    36  .  .  .  .  .  .  }
    37  .  .  .  .  .  }
    38  .  .  .  .  .  Comment: nil
    39  .  .  .  .  }
    40  .  .  .  }
    41  .  .  .  Rparen: -
    42  .  .  }
    43  .  .  1: *ast.FuncDecl {
    44  .  .  .  Doc: nil
    45  .  .  .  Recv: nil
    46  .  .  .  Name: *ast.Ident {
    47  .  .  .  .  NamePos: test.go:6:6
    48  .  .  .  .  Name: "main"
    49  .  .  .  .  Obj: *ast.Object {
    50  .  .  .  .  .  Kind: func
    51  .  .  .  .  .  Name: "main"
    52  .  .  .  .  .  Decl: *(obj @ 43)
    53  .  .  .  .  .  Data: nil
    54  .  .  .  .  .  Type: nil
    55  .  .  .  .  }
    56  .  .  .  }
    57  .  .  .  Type: *ast.FuncType {
    58  .  .  .  .  Func: test.go:6:1
    59  .  .  .  .  TypeParams: nil
    60  .  .  .  .  Params: *ast.FieldList {
    61  .  .  .  .  .  Opening: test.go:6:10
    62  .  .  .  .  .  List: nil
    63  .  .  .  .  .  Closing: test.go:6:11
    64  .  .  .  .  }
    65  .  .  .  .  Results: nil
    66  .  .  .  }
    67  .  .  .  Body: *ast.BlockStmt {
    68  .  .  .  .  Lbrace: test.go:6:12
    69  .  .  .  .  List: []ast.Stmt (len = 3) {
    70  .  .  .  .  .  0: *ast.AssignStmt {
    71  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    72  .  .  .  .  .  .  .  0: *ast.Ident {
    73  .  .  .  .  .  .  .  .  NamePos: test.go:10:2
    74  .  .  .  .  .  .  .  .  Name: "b"
    75  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    76  .  .  .  .  .  .  .  .  .  Kind: var
    77  .  .  .  .  .  .  .  .  .  Name: "b"
    78  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 70)
    79  .  .  .  .  .  .  .  .  .  Data: nil
    80  .  .  .  .  .  .  .  .  .  Type: nil
    81  .  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  TokPos: test.go:10:4
    85  .  .  .  .  .  .  Tok: :=
    86  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    87  .  .  .  .  .  .  .  0: *ast.BasicLit {
    88  .  .  .  .  .  .  .  .  ValuePos: test.go:10:7
    89  .  .  .  .  .  .  .  .  Kind: STRING
    90  .  .  .  .  .  .  .  .  Value: "\"haha\""
    91  .  .  .  .  .  .  .  }
    92  .  .  .  .  .  .  }
    93  .  .  .  .  .  }
    94  .  .  .  .  .  1: *ast.IfStmt {
    95  .  .  .  .  .  .  If: test.go:11:2
    96  .  .  .  .  .  .  Init: nil
    97  .  .  .  .  .  .  Cond: *ast.Ident {
    98  .  .  .  .  .  .  .  NamePos: test.go:11:5
    99  .  .  .  .  .  .  .  Name: "true"
   100  .  .  .  .  .  .  .  Obj: nil
   101  .  .  .  .  .  .  }
   102  .  .  .  .  .  .  Body: *ast.BlockStmt {
   103  .  .  .  .  .  .  .  Lbrace: test.go:11:10
   104  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   105  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   106  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   107  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   108  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:12:3
   109  .  .  .  .  .  .  .  .  .  .  .  Name: "println"
   110  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   111  .  .  .  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  .  .  .  .  Lparen: test.go:12:10
   113  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   114  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   115  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: test.go:12:11
   116  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a_"
   117  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 21)
   118  .  .  .  .  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   121  .  .  .  .  .  .  .  .  .  .  Rparen: test.go:12:13
   122  .  .  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  .  }
   125  .  .  .  .  .  .  .  Rbrace: test.go:13:2
   126  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  Else: nil
   128  .  .  .  .  .  }
   129  .  .  .  .  .  2: *ast.ExprStmt {
   130  .  .  .  .  .  .  X: *ast.CallExpr {
   131  .  .  .  .  .  .  .  Fun: *ast.Ident {
   132  .  .  .  .  .  .  .  .  NamePos: test.go:18:2
   133  .  .  .  .  .  .  .  .  Name: "println"
   134  .  .  .  .  .  .  .  .  Obj: nil
   135  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  Lparen: test.go:18:9
   137  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   138  .  .  .  .  .  .  .  .  0: *ast.Ident {
   139  .  .  .  .  .  .  .  .  .  NamePos: test.go:18:10
   140  .  .  .  .  .  .  .  .  .  Name: "b"
   141  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 75)
   142  .  .  .  .  .  .  .  .  }
   143  .  .  .  .  .  .  .  .  1: *ast.Ident {
   144  .  .  .  .  .  .  .  .  .  NamePos: test.go:18:12
   145  .  .  .  .  .  .  .  .  .  Name: "a_"
   146  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 21)
   147  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  }
   149  .  .  .  .  .  .  .  Ellipsis: -
   150  .  .  .  .  .  .  .  Rparen: test.go:18:14
   151  .  .  .  .  .  .  }
   152  .  .  .  .  .  }
   153  .  .  .  .  }
   154  .  .  .  .  Rbrace: test.go:20:1
   155  .  .  .  }
   156  .  .  }
   157  .  }
   158  .  FileStart: test.go:1:1
   159  .  FileEnd: test.go:20:2
   160  .  Scope: *ast.Scope {
   161  .  .  Outer: nil
   162  .  .  Objects: map[string]*ast.Object (len = 2) {
   163  .  .  .  "main": *(obj @ 49)
   164  .  .  .  "a_": *(obj @ 21)
   165  .  .  }
   166  .  }
   167  .  Imports: nil
   168  .  Unresolved: []*ast.Ident (len = 3) {
   169  .  .  0: *(obj @ 97)
   170  .  .  1: *(obj @ 107)
   171  .  .  2: *(obj @ 131)
   172  .  }
   173  .  Comments: nil
   174  .  GoVersion: ""
   175  }
