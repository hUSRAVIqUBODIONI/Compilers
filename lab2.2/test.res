Program(funcs=[Func(name='zip',
                    type_=FuncType(input_=TupleType(types=[ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>)),
                                                           ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>))]),
                                   output=ListType(type_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                                          ElementaryType(type_=<TypeEnum.Int: 'int'>)]))),
                    body=[Statement(pattern=PatternTuple(patterns=[PatternBinary(lhs=VarExpr(varname='x'),
                                                                                 op=':',
                                                                                 rhs=VarExpr(varname='xs')),
                                                                   PatternBinary(lhs=VarExpr(varname='y'),
                                                                                 op=':',
                                                                                 rhs=VarExpr(varname='ys'))]),
                                    result=ResultBinary(lhs=ResultTuple(results=[VarExpr(varname='x'),
                                                                                 VarExpr(varname='y')]),
                                                        op=':',
                                                        rhs=FuncCallExpr(funcname='zip',
                                                                         argument=ResultTuple(results=[VarExpr(varname='xs'),
                                                                                                       VarExpr(varname='ys')])))),
                          Statement(pattern=PatternTuple(patterns=[VarExpr(varname='xs'),
                                                                   VarExpr(varname='ys')]),
                                    result=ResultList(results=[]))]),
               Func(name='cart_prod',
                    type_=FuncType(input_=TupleType(types=[ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>)),
                                                           ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>))]),
                                   output=ListType(type_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                                          ElementaryType(type_=<TypeEnum.Int: 'int'>)]))),
                    body=[Statement(pattern=PatternTuple(patterns=[PatternBinary(lhs=VarExpr(varname='x'),
                                                                                 op=':',
                                                                                 rhs=VarExpr(varname='xs')),
                                                                   VarExpr(varname='ys')]),
                                    result=FuncCallExpr(funcname='append',
                                                        argument=ResultTuple(results=[FuncCallExpr(funcname='bind',
                                                                                                   argument=ResultTuple(results=[VarExpr(varname='x'),
                                                                                                                                 VarExpr(varname='ys')])),
                                                                                      FuncCallExpr(funcname='cart_prod',
                                                                                                   argument=ResultTuple(results=[VarExpr(varname='xs'),
                                                                                                                                 VarExpr(varname='ys')]))]))),
                          Statement(pattern=PatternTuple(patterns=[PatternList(patterns=[]),
                                                                   VarExpr(varname='ys')]),
                                    result=ResultList(results=[]))]),
               Func(name='bind',
                    type_=FuncType(input_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                           ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>))]),
                                   output=ListType(type_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                                          ElementaryType(type_=<TypeEnum.Int: 'int'>)]))),
                    body=[Statement(pattern=PatternTuple(patterns=[VarExpr(varname='x'),
                                                                   PatternList(patterns=[])]),
                                    result=ResultList(results=[])),
                          Statement(pattern=PatternTuple(patterns=[VarExpr(varname='x'),
                                                                   PatternBinary(lhs=VarExpr(varname='y'),
                                                                                 op=':',
                                                                                 rhs=VarExpr(varname='ys'))]),
                                    result=ResultBinary(lhs=ResultTuple(results=[VarExpr(varname='x'),
                                                                                 VarExpr(varname='y')]),
                                                        op=':',
                                                        rhs=FuncCallExpr(funcname='bind',
                                                                         argument=ResultTuple(results=[VarExpr(varname='x'),
                                                                                                       VarExpr(varname='ys')]))))]),
               Func(name='append',
                    type_=FuncType(input_=TupleType(types=[ListType(type_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                                                           ElementaryType(type_=<TypeEnum.Int: 'int'>)])),
                                                           ListType(type_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                                                           ElementaryType(type_=<TypeEnum.Int: 'int'>)]))]),
                                   output=ListType(type_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                                          ElementaryType(type_=<TypeEnum.Int: 'int'>)]))),
                    body=[Statement(pattern=PatternTuple(patterns=[PatternBinary(lhs=VarExpr(varname='x'),
                                                                                 op=':',
                                                                                 rhs=VarExpr(varname='xs')),
                                                                   VarExpr(varname='ys')]),
                                    result=ResultBinary(lhs=VarExpr(varname='x'),
                                                        op=':',
                                                        rhs=FuncCallExpr(funcname='append',
                                                                         argument=ResultTuple(results=[VarExpr(varname='xs'),
                                                                                                       VarExpr(varname='ys')])))),
                          Statement(pattern=PatternTuple(patterns=[PatternList(patterns=[]),
                                                                   VarExpr(varname='ys')]),
                                    result=VarExpr(varname='ys'))]),
               Func(name='flat',
                    type_=FuncType(input_=ListType(type_=ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>))),
                                   output=ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>))),
                    body=[Statement(pattern=PatternBinary(lhs=PatternBinary(lhs=VarExpr(varname='x'),
                                                                            op=':',
                                                                            rhs=VarExpr(varname='xs')),
                                                          op=':',
                                                          rhs=VarExpr(varname='xss')),
                                    result=ResultBinary(lhs=VarExpr(varname='x'),
                                                        op=':',
                                                        rhs=FuncCallExpr(funcname='flat',
                                                                         argument=ResultBinary(lhs=VarExpr(varname='xs'),
                                                                                               op=':',
                                                                                               rhs=VarExpr(varname='xss'))))),
                          Statement(pattern=PatternBinary(lhs=PatternList(patterns=[]),
                                                          op=':',
                                                          rhs=VarExpr(varname='xss')),
                                    result=FuncCallExpr(funcname='flat',
                                                        argument=VarExpr(varname='xss'))),
                          Statement(pattern=PatternList(patterns=[]),
                                    result=ResultList(results=[]))]),
               Func(name='sum',
                    type_=FuncType(input_=ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>)),
                                   output=ElementaryType(type_=<TypeEnum.Int: 'int'>)),
                    body=[Statement(pattern=PatternBinary(lhs=VarExpr(varname='x'),
                                                          op=':',
                                                          rhs=VarExpr(varname='xs')),
                                    result=ResultBinary(lhs=VarExpr(varname='x'),
                                                        op='+',
                                                        rhs=FuncCallExpr(funcname='sum',
                                                                         argument=VarExpr(varname='xs')))),
                          Statement(pattern=PatternList(patterns=[]),
                                    result=ConstExpr(value=0,
                                                     type_=<TypeEnum.Int: 'int'>))]),
               Func(name='polynom',
                    type_=FuncType(input_=TupleType(types=[ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                                           ListType(type_=ElementaryType(type_=<TypeEnum.Int: 'int'>))]),
                                   output=ElementaryType(type_=<TypeEnum.Int: 'int'>)),
                    body=[Statement(pattern=PatternTuple(patterns=[VarExpr(varname='x'),
                                                                   PatternList(patterns=[])]),
                                    result=ConstExpr(value=0,
                                                     type_=<TypeEnum.Int: 'int'>)),
                          Statement(pattern=PatternTuple(patterns=[VarExpr(varname='x'),
                                                                   PatternBinary(lhs=VarExpr(varname='coef'),
                                                                                 op=':',
                                                                                 rhs=VarExpr(varname='coefs'))]),
                                    result=ResultBinary(lhs=ResultBinary(lhs=FuncCallExpr(funcname='polynom',
                                                                                          argument=ResultTuple(results=[VarExpr(varname='x'),
                                                                                                                        VarExpr(varname='coefs')])),
                                                                         op='*',
                                                                         rhs=VarExpr(varname='x')),
                                                        op='+',
                                                        rhs=VarExpr(varname='coef')))]),
               Func(name='polynom1111',
                    type_=FuncType(input_=ElementaryType(type_=<TypeEnum.Int: 'int'>),
                                   output=ElementaryType(type_=<TypeEnum.Int: 'int'>)),
                    body=[Statement(pattern=VarExpr(varname='x'),
                                    result=FuncCallExpr(funcname='polynom',
                                                        argument=ResultTuple(results=[VarExpr(varname='x'),
                                                                                      ResultList(results=[ConstExpr(value=1,
                                                                                                                    type_=<TypeEnum.Int: 'int'>),
                                                                                                          ConstExpr(value=1,
                                                                                                                    type_=<TypeEnum.Int: 'int'>),
                                                                                                          ConstExpr(value=1,
                                                                                                                    type_=<TypeEnum.Int: 'int'>),
                                                                                                          ConstExpr(value=1,
                                                                                                                    type_=<TypeEnum.Int: 'int'>)])])))])])
